/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API Eatinghistory
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntFoodmenu,
    EntFoodmenuFromJSON,
    EntFoodmenuFromJSONTyped,
    EntFoodmenuToJSON,
    EntMealplan,
    EntMealplanFromJSON,
    EntMealplanFromJSONTyped,
    EntMealplanToJSON,
    EntTaste,
    EntTasteFromJSON,
    EntTasteFromJSONTyped,
    EntTasteToJSON,
    EntUser,
    EntUserFromJSON,
    EntUserFromJSONTyped,
    EntUserToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntEatinghistoryEdges
 */
export interface EntEatinghistoryEdges {
    /**
     * 
     * @type {EntFoodmenu}
     * @memberof EntEatinghistoryEdges
     */
    foodmenu?: EntFoodmenu;
    /**
     * 
     * @type {EntMealplan}
     * @memberof EntEatinghistoryEdges
     */
    mealplan?: EntMealplan;
    /**
     * 
     * @type {EntTaste}
     * @memberof EntEatinghistoryEdges
     */
    taste?: EntTaste;
    /**
     * 
     * @type {EntUser}
     * @memberof EntEatinghistoryEdges
     */
    user?: EntUser;
}

export function EntEatinghistoryEdgesFromJSON(json: any): EntEatinghistoryEdges {
    return EntEatinghistoryEdgesFromJSONTyped(json, false);
}

export function EntEatinghistoryEdgesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntEatinghistoryEdges {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'foodmenu': !exists(json, 'Foodmenu') ? undefined : EntFoodmenuFromJSON(json['Foodmenu']),
        'mealplan': !exists(json, 'Mealplan') ? undefined : EntMealplanFromJSON(json['Mealplan']),
        'taste': !exists(json, 'Taste') ? undefined : EntTasteFromJSON(json['Taste']),
        'user': !exists(json, 'User') ? undefined : EntUserFromJSON(json['User']),
    };
}

export function EntEatinghistoryEdgesToJSON(value?: EntEatinghistoryEdges | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'foodmenu': EntFoodmenuToJSON(value.foodmenu),
        'mealplan': EntMealplanToJSON(value.mealplan),
        'taste': EntTasteToJSON(value.taste),
        'user': EntUserToJSON(value.user),
    };
}


