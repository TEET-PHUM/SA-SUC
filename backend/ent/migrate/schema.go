// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// EatinghistoriesColumns holds the columns for the "eatinghistories" table.
	EatinghistoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "added_time", Type: field.TypeTime},
		{Name: "foodmenu_id", Type: field.TypeInt, Nullable: true},
		{Name: "mealplan_id", Type: field.TypeInt, Nullable: true},
		{Name: "taste_id", Type: field.TypeInt, Nullable: true},
		{Name: "user_id", Type: field.TypeInt, Nullable: true},
	}
	// EatinghistoriesTable holds the schema information for the "eatinghistories" table.
	EatinghistoriesTable = &schema.Table{
		Name:       "eatinghistories",
		Columns:    EatinghistoriesColumns,
		PrimaryKey: []*schema.Column{EatinghistoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "eatinghistories_foodmenus_eatinghistory",
				Columns: []*schema.Column{EatinghistoriesColumns[2]},

				RefColumns: []*schema.Column{FoodmenusColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "eatinghistories_mealplans_eatinghistory",
				Columns: []*schema.Column{EatinghistoriesColumns[3]},

				RefColumns: []*schema.Column{MealplansColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "eatinghistories_tastes_eatinghistory",
				Columns: []*schema.Column{EatinghistoriesColumns[4]},

				RefColumns: []*schema.Column{TastesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "eatinghistories_users_eatinghistory",
				Columns: []*schema.Column{EatinghistoriesColumns[5]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// FoodmenusColumns holds the columns for the "foodmenus" table.
	FoodmenusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "foodmenu_name", Type: field.TypeString},
		{Name: "foodmenu_type", Type: field.TypeString},
		{Name: "owner_id", Type: field.TypeInt, Nullable: true},
	}
	// FoodmenusTable holds the schema information for the "foodmenus" table.
	FoodmenusTable = &schema.Table{
		Name:       "foodmenus",
		Columns:    FoodmenusColumns,
		PrimaryKey: []*schema.Column{FoodmenusColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "foodmenus_users_foodmenu",
				Columns: []*schema.Column{FoodmenusColumns[3]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// MealplansColumns holds the columns for the "mealplans" table.
	MealplansColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "mealplan_name", Type: field.TypeString},
		{Name: "owner_id", Type: field.TypeInt, Nullable: true},
	}
	// MealplansTable holds the schema information for the "mealplans" table.
	MealplansTable = &schema.Table{
		Name:       "mealplans",
		Columns:    MealplansColumns,
		PrimaryKey: []*schema.Column{MealplansColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "mealplans_users_mealplan",
				Columns: []*schema.Column{MealplansColumns[2]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TastesColumns holds the columns for the "tastes" table.
	TastesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "taste_name", Type: field.TypeString},
	}
	// TastesTable holds the schema information for the "tastes" table.
	TastesTable = &schema.Table{
		Name:        "tastes",
		Columns:     TastesColumns,
		PrimaryKey:  []*schema.Column{TastesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:        "users",
		Columns:     UsersColumns,
		PrimaryKey:  []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		EatinghistoriesTable,
		FoodmenusTable,
		MealplansTable,
		TastesTable,
		UsersTable,
	}
)

func init() {
	EatinghistoriesTable.ForeignKeys[0].RefTable = FoodmenusTable
	EatinghistoriesTable.ForeignKeys[1].RefTable = MealplansTable
	EatinghistoriesTable.ForeignKeys[2].RefTable = TastesTable
	EatinghistoriesTable.ForeignKeys[3].RefTable = UsersTable
	FoodmenusTable.ForeignKeys[0].RefTable = UsersTable
	MealplansTable.ForeignKeys[0].RefTable = UsersTable
}
