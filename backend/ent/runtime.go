// Code generated by entc, DO NOT EDIT.

package ent

import (
	"github.com/Teeth/app/ent/foodmenu"
	"github.com/Teeth/app/ent/mealplan"
	"github.com/Teeth/app/ent/schema"
	"github.com/Teeth/app/ent/taste"
	"github.com/Teeth/app/ent/user"
)

// The init function reads all schema descriptors with runtime
// code (default values, validators or hooks) and stitches it
// to their package variables.
func init() {
	foodmenuFields := schema.Foodmenu{}.Fields()
	_ = foodmenuFields
	// foodmenuDescFoodmenuName is the schema descriptor for foodmenu_name field.
	foodmenuDescFoodmenuName := foodmenuFields[0].Descriptor()
	// foodmenu.FoodmenuNameValidator is a validator for the "foodmenu_name" field. It is called by the builders before save.
	foodmenu.FoodmenuNameValidator = foodmenuDescFoodmenuName.Validators[0].(func(string) error)
	// foodmenuDescFoodmenuType is the schema descriptor for foodmenu_type field.
	foodmenuDescFoodmenuType := foodmenuFields[1].Descriptor()
	// foodmenu.FoodmenuTypeValidator is a validator for the "foodmenu_type" field. It is called by the builders before save.
	foodmenu.FoodmenuTypeValidator = foodmenuDescFoodmenuType.Validators[0].(func(string) error)
	mealplanFields := schema.Mealplan{}.Fields()
	_ = mealplanFields
	// mealplanDescMealplanName is the schema descriptor for mealplan_name field.
	mealplanDescMealplanName := mealplanFields[0].Descriptor()
	// mealplan.MealplanNameValidator is a validator for the "mealplan_name" field. It is called by the builders before save.
	mealplan.MealplanNameValidator = mealplanDescMealplanName.Validators[0].(func(string) error)
	tasteFields := schema.Taste{}.Fields()
	_ = tasteFields
	// tasteDescTasteName is the schema descriptor for taste_name field.
	tasteDescTasteName := tasteFields[0].Descriptor()
	// taste.TasteNameValidator is a validator for the "taste_name" field. It is called by the builders before save.
	taste.TasteNameValidator = tasteDescTasteName.Validators[0].(func(string) error)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[0].Descriptor()
	// user.NameValidator is a validator for the "name" field. It is called by the builders before save.
	user.NameValidator = userDescName.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[1].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
}
