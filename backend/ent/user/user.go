// Code generated by entc, DO NOT EDIT.

package user

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"

	// EdgeMealplan holds the string denoting the mealplan edge name in mutations.
	EdgeMealplan = "mealplan"
	// EdgeFoodmenu holds the string denoting the foodmenu edge name in mutations.
	EdgeFoodmenu = "foodmenu"
	// EdgeEatinghistory holds the string denoting the eatinghistory edge name in mutations.
	EdgeEatinghistory = "eatinghistory"

	// Table holds the table name of the user in the database.
	Table = "users"
	// MealplanTable is the table the holds the mealplan relation/edge.
	MealplanTable = "mealplans"
	// MealplanInverseTable is the table name for the Mealplan entity.
	// It exists in this package in order to avoid circular dependency with the "mealplan" package.
	MealplanInverseTable = "mealplans"
	// MealplanColumn is the table column denoting the mealplan relation/edge.
	MealplanColumn = "owner_id"
	// FoodmenuTable is the table the holds the foodmenu relation/edge.
	FoodmenuTable = "foodmenus"
	// FoodmenuInverseTable is the table name for the Foodmenu entity.
	// It exists in this package in order to avoid circular dependency with the "foodmenu" package.
	FoodmenuInverseTable = "foodmenus"
	// FoodmenuColumn is the table column denoting the foodmenu relation/edge.
	FoodmenuColumn = "owner_id"
	// EatinghistoryTable is the table the holds the eatinghistory relation/edge.
	EatinghistoryTable = "eatinghistories"
	// EatinghistoryInverseTable is the table name for the Eatinghistory entity.
	// It exists in this package in order to avoid circular dependency with the "eatinghistory" package.
	EatinghistoryInverseTable = "eatinghistories"
	// EatinghistoryColumn is the table column denoting the eatinghistory relation/edge.
	EatinghistoryColumn = "user_id"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldEmail,
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// EmailValidator is a validator for the "email" field. It is called by the builders before save.
	EmailValidator func(string) error
)
